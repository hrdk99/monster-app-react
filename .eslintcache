[{"E:\\Projects_ReactJS\\Monsters\\monster-app\\src\\index.js":"1","E:\\Projects_ReactJS\\Monsters\\monster-app\\src\\App.js":"2","E:\\Projects_ReactJS\\Monsters\\monster-app\\src\\reportWebVitals.js":"3","E:\\Projects_ReactJS\\Monsters\\monster-app\\src\\Components\\card-list\\card-list.component.jsx":"4","E:\\Projects_ReactJS\\Monsters\\monster-app\\src\\Components\\card\\card.component.jsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":765,"mtime":1608287584261,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":295,"mtime":1608292311338,"results":"10","hashOfConfig":"7"},{"size":332,"mtime":1608292482188,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1oiun3x",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"E:\\Projects_ReactJS\\Monsters\\monster-app\\src\\index.js",[],["25","26"],"E:\\Projects_ReactJS\\Monsters\\monster-app\\src\\App.js",["27","28","29"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { component } from \"react\";\nimport {Cardlist} from './Components/card-list/card-list.component';\n\nimport { unstable_renderSubtreeIntoContainer } from \"react-dom\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"Hardik\",\n      users: [{}],\n    };\n  }\n\n  componentDidMount() {  \n\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .catch((reject) => console.log(reject))\n      .then((promiseResult) => this.setState({ users: promiseResult }));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Cardlist users={this.state.users} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","E:\\Projects_ReactJS\\Monsters\\monster-app\\src\\reportWebVitals.js",[],"E:\\Projects_ReactJS\\Monsters\\monster-app\\src\\Components\\card-list\\card-list.component.jsx",[],"E:\\Projects_ReactJS\\Monsters\\monster-app\\src\\Components\\card\\card.component.jsx",["30"],"import React from \"react\";\r\nimport \"../card/card.component.css\";\r\n\r\nexport const Card = (props) => (\r\n  <div className=\"card-container\">\r\n      <img alt='Monster image' className=\"img-container\" src={`https://robohash.org/${props.user.id}?set=set5`}/>\r\n    <h3>{props.user.name}</h3>\r\n    <h6>{props.user.email}</h6>\r\n  </div>\r\n);\r\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":8,"nodeType":"37","messageId":"38","endLine":1,"endColumn":12},{"ruleId":"35","severity":1,"message":"39","line":3,"column":17,"nodeType":"37","messageId":"38","endLine":3,"endColumn":26},{"ruleId":"35","severity":1,"message":"40","line":6,"column":10,"nodeType":"37","messageId":"38","endLine":6,"endColumn":45},{"ruleId":"41","severity":1,"message":"42","line":6,"column":7,"nodeType":"43","endLine":6,"endColumn":114},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'component' is defined but never used.","'unstable_renderSubtreeIntoContainer' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]